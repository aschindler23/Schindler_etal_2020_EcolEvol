# This software has been approved for release by the U.S. Geological Survey (USGS). Although the software has been subjected to rigorous review, the USGS reserves the right 
# to update the software as needed pursuant to further analysis and review. No warranty, expressed or implied, is made by the USGS or the U.S. Government as to the 
# functionality of the software and related material nor shall the fact of release constitute any such warranty. Furthermore, the software is released on condition that 
# neither the USGS nor the U.S. Government shall be held liable for any damages resulting from its authorized or unauthorized use.

### ED piece-wise threshold model for northern bobwhite and ring-necked pheasant abundance ###

model{
  ## Priors
  
  for(i in 1:nroute){ # loop over routes
    for(t in 1:nyear){ # loop over years
      eps.mu[i,t] ~ dnorm(0,tau.mu) # random effect for abundance
  }}
  tau.mu <- 1/(sd.mu*sd.mu)
  sd.mu ~ dgamma(5,1)

  over ~ dgamma(1,1) # overdispersion parameter
  
  beta0 ~ dnorm(0,0.1) # intercept for abundance
  beta1 ~ dnorm(0,0.1) # PDSI covariate effect
  beta2 ~ dnorm(0,0.1) # PCP covariate effect
  beta3 ~ dnorm(0,0.1) # TMAX covariate effect
  beta4 ~ dnorm(0,0.1) # TMIN covariate effect
  beta5 ~ dnorm(0,0.1) # ED covariate effect

  delta ~ dnorm(0,0.1) # intensification parameter
  phi ~ dunif(l,u) # threshold parameter 
  # (l = minimum ED value observed, u = maximum ED value observed)

  ## Likelihood for true abundance

  for(i in 1:nroute){ # loop over routes
    for(t in 1:nyear){ # loop over years
      y[i,t] ~ dnegbin(s[i,t],over)

      s[i,t] <- over/(over+mu[i,t]) # derive s parameter
      v[i,t] <- over*(1-s[i,t])/(s[i,t]*s[i,t]) # derive variance
  }

      log(mu[i,1]) <- beta0 + beta1*pdsi0[i] + 
        beta2*pcp[i,1] + beta3*tmax0[i] + beta4*tmin[i,1] + 
        (beta5+delta*step(ed[i,1]-phi))*(ed[i,1]-phi) +
        eps.mu[i,1] # process model for year 1, where pdsi0 and tmax0 are the pdsi and tmax values for the summer preceding the first year of survey data

    for(t in 2:nyear){ # loop over years beginning in year 2
      log(mu[i,t]) <- beta0 + beta1*pdsi[i,t-1] + 
        beta2*pcp[i,t] + beta3*tmax[i,t-1] + beta4*tmin[i,t] + 
        (beta5+delta*step(ed[i,t]-phi))*(ed[i,t]-phi) +
        eps.mu[i,t] 
  }}

  ## Residuals and fit stats
  
  for(i in 1:nroute){ # loop over routes
    for(t in 1:nyear){ # loop over years
      eval[i,t]<-mu[i,t]
      E[i,t]<-pow((y[i,t]-eval[i,t]),2)/(eval[i,t]+0.5)
      # Generate replicate data and compute fit stats for them
      y.new[i,t] ~ dnegbin(s[i,t],over)
      E.new[i,t] <- pow((y.new[i,t]-eval[i,t]),2)/(eval[i,t]+0.5)
  }}
    
  ## derived quantities for abundance and residuals
  
  fit <-sum(E[,])
  fit.new <-sum(E.new[,])
  
}
    
